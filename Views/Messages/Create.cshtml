@model BookSwap.Models.MessageViewModel

@{
    ViewData["Title"] = "Messages";
}

<div class="d-flex align-items-center mb-3">
    @if (!string.IsNullOrEmpty(Model.ReceiverImagePath))
{
    <img src="@(string.IsNullOrEmpty(Model.ReceiverImagePath) ? "/images/default-profile.png" : $"/uploads/{Model.ReceiverImagePath}")"
         alt="User image" style="width:50px; height:50px; object-fit: cover; border-radius:50%;" />
}
else
{
    <img src="/images/default-profile.png"
         alt="Default image" style="width:50px; height:50px; object-fit: cover; border-radius:50%;" />
}

    <h4 class="ms-2">@Model.ReceiverUsername</h4>
</div>

<div id="messages-box" style="height:400px; overflow-y:auto; border:1px solid #ccc; padding:10px; margin-bottom:15px;">
    @foreach (var message in Model.Messages)
    {
        bool isSentByCurrentUser = message.SenderId == Model.CurrentUserId;
        <div style="margin-bottom:10px; text-align:@(isSentByCurrentUser ? "right" : "left")">
            <div style="display:inline-block; padding:8px 12px; border-radius:15px; background:@(isSentByCurrentUser ? "#007bff" : "#e5e5ea"); color:@(isSentByCurrentUser ? "white" : "black"); max-width:70%;">
                @message.Content
                <div style="font-size:10px; margin-top:4px; opacity:0.7;">
                    @message.DateSent.ToLocalTime().ToString("g")
                </div>
            </div>
        </div>
    }
</div>

<form id="message-form" asp-action="Create" method="post">
    <input type="hidden" asp-for="ReceiverId" />
    <div class="input-group">
        <input asp-for="NewMessage" id="message-input" class="form-control" placeholder="Napisz wiadomość..." autocomplete="off" maxlength="100" />
        <button type="button" id="send-btn" class="btn btn-primary">Wyślij</button>
    </div>
    <small id="char-count" class="text-muted">Pozostało 100 znaków</small>
    <span asp-validation-for="NewMessage" class="text-danger"></span>
</form>

@section Scripts {
    <script>
        // Automatycznie scrolluj na dół
        const messagesBox = document.getElementById('messages-box');
        messagesBox.scrollTop = messagesBox.scrollHeight;

         // Licznik znaków
        const input = document.getElementById('message-input');
        const charCount = document.getElementById('char-count');

        input.addEventListener('input', () => {
            const remaining = 100 - input.value.length;
            charCount.textContent = `Pozostało ${remaining} znaków`;
        });

        // Obsługa wysyłania wiadomości przez AJAX
        document.getElementById('send-btn').addEventListener('click', async function () {
            const input = document.getElementById('message-input');
            const content = input.value.trim();
            const receiverId = @Model.ReceiverId;

            if (content === '') {
                alert('Wiadomość nie może być pusta.');
                return;
            }

            try {
                const response = await fetch('/Messages/SendMessage', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ receiverId, content })
                });

                if (response.ok) {
                    const data = await response.json();

                    // Dodaj wiadomość do messages-box
                    const msgDiv = document.createElement('div');
                    msgDiv.style.marginBottom = '10px';
                    msgDiv.style.textAlign = 'right';
                    msgDiv.innerHTML = `
                        <div style="display:inline-block; padding:8px 12px; border-radius:15px; background:#007bff; color:white; max-width:70%;">
                            ${data.message}
                            <div style="font-size:10px; margin-top:4px; opacity:0.7;">
                                ${data.date}
                            </div>
                        </div>
                    `;
                    messagesBox.appendChild(msgDiv);
                    messagesBox.scrollTop = messagesBox.scrollHeight;

                    input.value = '';
                } else {
                    const errorText = await response.text();
                    console.log(`Błąd serwera: ${errorText}`);
                    alert(`Nie udało się wysłać wiadomości: ${errorText}`);
                }
            } catch (error) {
                console.error('Błąd AJAX:', error);
                alert(`Wystąpił błąd: ${error.message}`);
            }
            
        });
    </script>
}
